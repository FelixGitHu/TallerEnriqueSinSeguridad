@page "/configuracions"
@inject IRepositorio repositorio
@inject IMostrarMensajes mostrarMensajes

<h3>Configuraciones</h3>

<div class="form-group">
    <a class="btn btn-info" href="configuracions/crear">Modificar Configuarción</a>
</div>

<ListadoGenerico Listado="Configuracions">
    <HayRegistrosCompleto>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Acción</th>
                    <th>Encabezado</th>
                    <th>Nombre Taller</th>
                    <th>Descripción Servicios</th>
                    <th>Dirección</th>
                    <th>Telefono</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Configuracions)
                {
                    <tr>
                        <td class="col-sm-2">
                            <a href="/configuracions/editar/@item.Id" class="btn btn-success">Editar</a>
                            <button @onclick="@(() => BorrarConfiguracion(item))" class="btn btn-danger">Borrar</button>
                        </td>
                        <td>@item.Encabezado</td>
                        <td>@item.NombreNegocio</td>
                        <td>@item.DescripcionServicios</td>
                        <td>@item.Direccion</td>
                        <td>@item.Telefono</td>
                    </tr>
                }
            </tbody>
        </table>
    </HayRegistrosCompleto>
</ListadoGenerico>

@code {
    public List<Configuracion> Configuracions { get; set; }
    protected async override Task OnInitializedAsync()
    {
        await Cargar();
    }

    private async Task Cargar()
    {
        var responseHttp = await repositorio.Get<List<Configuracion>>("api/configuracions");
        Configuracions = responseHttp.Response;
    }

    private async Task BorrarConfiguracion(Configuracion configuracion)
    {
        var responseHttp = await repositorio.Delete($"api/configuracions/{configuracion.Id}");
        if (responseHttp.Error)
        {
            await mostrarMensajes.MostrarMensajeError(await responseHttp.GetBody());
        }
        else
        {
            await Cargar();
        }

    }
}
