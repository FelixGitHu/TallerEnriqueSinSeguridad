@page "/articulos/editar/{ArticuloId:int}"
@inject IRepositorio repositorio
@inject IMostrarMensajes mostrarMensaje
@inject NavigationManager navigationManager
@attribute [Authorize(Roles = "admin")]

<h3>Editar artículo</h3>

@if (Articulo == null)
{
    <text>Cargando...</text>
}
else
{
    <FormularioArticulo OnValidSubmit="Editar" Articulo="Articulo" ocultarcodigo="ocultacodigo" />
}

@code {
    [Parameter] public int ArticuloId { get; set; }
    private Articulo Articulo;
    public bool ocultacodigo = true;

    protected async override Task OnInitializedAsync()
    {
        var httpResponse = await repositorio.Get<Articulo>($"api/articulos/{ArticuloId}");
        if (httpResponse.Error)
        {
            if (httpResponse.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("articulos");
            }
            else
            {
                await mostrarMensaje.MostrarMensajeError(await httpResponse.GetBody());
            }
        }
        else
        {
            Articulo = httpResponse.Response;
        }
    }

    private async void Editar()
    {
        var httpResponse = await repositorio.Put("api/articulos", Articulo);
        if (httpResponse.Error)
        {
            await mostrarMensaje.MostrarMensajeError(await httpResponse.GetBody());
        }
        else
        {
            navigationManager.NavigateTo("articulos");
        }
    }
}