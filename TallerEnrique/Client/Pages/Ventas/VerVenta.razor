@page "/imprimir-venta/{idventa:int}"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JS
@attribute [Authorize(Roles = "admin, vendedor")]


@using System.Text.Json

<div class="d-flex justify-content-between mb-2">
    <div class="btn-group">
        <button id="miboton" class="btn btn-sm btn-secondary" @onclick="@Volver">
            <i class="oi oi-arrow-circle-left"></i> Volver atrás
        </button>
        <button id="miboton" class="btn btn-sm btn-primary" onclick="window.print()">
            Imprimir
        </button>
    </div>
    <div class="btn-group">
        
    </div>
</div>

@if (venta != null)
{
    <div class="card m-1" style="border-color: #fff; border-style: dotted; box-shadow: 22px 3px 39px 1px rgba(0,0,0,0.51);">
        <div class="card-body">
            <h4 class="card-title d-flex justify-content-center">
                <b>@configuracion.NombreNegocio</b>

            </h4>
            <h5 class="card-title d-flex justify-content-center">
                <b>@configuracion.Encabezado</b>
            </h5>
            <h5 class="d-flex justify-content-center">
                <small><b>Dirección:</b> @configuracion.Direccion</small>
            </h5>
            <h5 class="d-flex justify-content-center">
                <small><b>Teléfono:</b> @configuracion.Telefono</small>
            </h5>
            <h5 class="d-flex justify-content-center">
                <small> @configuracion.DescripcionServicios</small>
            </h5>

            <div class="d-flex justify-content-start">
                <b> </b> @*aqui irán los datos de la tabla configuración*@
                <small><b>N° factura:</b> @venta.NFactura</small>
            </div>                             
                                               
            <div class="d-flex justify-content-start">
                <small><b>Fecha de venta:</b> @venta.Fecha.ToShortDateString()</small>
            </div>
            <div class="d-flex justify-content-start">
                <small><b>Forma de Pago:</b> @venta.Moneda.TipoMoneda</small>
            </div>
            <div class="d-flex justify-content-start">
                <small><b>Servicio:</b> @venta.Servicio.Descripcion</small>
            </div>






            @if (venta.ClienteId != null)
            {
                <hr />
                <div class="row">
                    @if (venta.ClienteId != null)
                    {
                    <div class="form-group col-6">
                        <small><b>Cliente:</b> @venta.Cliente.Nombres @venta.Cliente.Apellidos </small> <br />
                        <small><b>Dirección:</b> @venta.Cliente.Ciudad</small> <br />
                        <small><b>Teléfono:</b> @venta.Cliente.Telefono</small>
                    </div>
                    <div class="form-group col-6 ">
                        <small><b>Número Placa:</b> @venta.Vehiculo.Placa <b>Marca:</b> @venta.Vehiculo.Marca</small> <br />
                        <small><b>Mecánico:</b> @venta.Mecanico.Nombre</small><br />
                        <small><b>Mano Obra:</b> C$ @venta.ManoObra.ToString("##,#.##")</small>
                    </div>
                        
                        
                    }

                </div>
            }
            <hr />

            <table class="table table-sm">
                <thead>
                    <tr>
                        <th>Articulo</th>
                        <th>Precio x un.</th>
                        <th>Cantidad</th>
                        <th>Descuento</th>
                        <th>Iva(15 %)</th>
                        <th>Subtotal</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in venta.DVentas)
                    {
                        <tr>
                            <td>@item.Articulo.Nombre</td>
                            <td>C$ @item.PrecioVenta.ToString("##,#.##")</td>
                            <td>@item.Cantidad</td>
                            <td>C$ @Math.Round(@item.Descuento, 2)</td>
                            <td>C$ @venta.IVA.ToString("##,#.##") </td>
                            <td>C$ @venta.SubTotal.ToString("##,#.##")</td>
                        </tr>
                    }
                
                </tbody>
            </table>

            <p class="card-text text-right m-4">
                <h6><b>TOTAL</b></h6>
                <h5><b>C$ @venta.Total.ToString("##,#.##")</b></h5>
            </p>
        </div>
    </div>
}

@code {

    public Venta venta { get; set; }
    //public List<Cliente> clientes { get; set; } = new List<Cliente>();
    //public List<Venta> VentasRealizadas = new List<Venta>();

    [Parameter] public int idventa { get; set; }

    public Configuracion configuracion { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var httpResponse = await Http.GetAsync($"api/ventas/{idventa}");
        if (httpResponse.IsSuccessStatusCode)
        {
            var responseString = await httpResponse.Content.ReadAsStringAsync();
            venta = JsonSerializer.Deserialize<Venta>(responseString,
                new JsonSerializerOptions() { PropertyNameCaseInsensitive = true });
        }
        else
        {
            await JS.InvokeVoidAsync("simple", "Error", "Venta no encontrada.", "error");
            NavigationManager.NavigateTo("ventas");
        }
        await CargarAjustes();

    }



    void Volver()
    {
        NavigationManager.NavigateTo("ventas");
    }

    async Task CargarAjustes()
    {
        var httpResponse = await Http.GetAsync($"api/Configuracions/1");
        if (httpResponse.IsSuccessStatusCode)
        {
            var responseString = await httpResponse.Content.ReadAsStringAsync();
            configuracion = JsonSerializer.Deserialize<Configuracion>(responseString,
                new JsonSerializerOptions() { PropertyNameCaseInsensitive = true });
        }
        else
        {
            await JS.InvokeVoidAsync("simple", "Error", "Venta no encontrada.", "error");
            NavigationManager.NavigateTo("ventas");
        }
    }

}