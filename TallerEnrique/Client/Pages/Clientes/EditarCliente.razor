@page "/clientes/editar/{ClienteId:int}"
@inject IRepositorio repositorio
@inject IMostrarMensajes mostrarMensaje
@inject NavigationManager navigationManager
@attribute [Authorize(Roles = "admin, vendedor")]

<h3>Editar Cliente</h3>

@if (Clientes == null)
{
    <text>Cargando...</text>
}
else
{
    <FormularioClientes OnValidSubmit="Editar" Clientes="Clientes" ocultarcedula="ocultadni"/>
}

@code {
    [Parameter] public int ClienteId { get; set; }
    private Cliente Clientes;
    public bool ocultadni = true;

    protected async override Task OnInitializedAsync()
    {
        var httpResponse = await repositorio.Get<Cliente>($"api/clientes/{ClienteId}");
        if (httpResponse.Error)
        {
            if (httpResponse.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("clientes");
            }
            else
            {
                await mostrarMensaje.MostrarMensajeError(await httpResponse.GetBody());
            }
        }
        else
        {
            Clientes = httpResponse.Response;
        }
    }

    private async void Editar()
    {
        var httpResponse = await repositorio.Put("api/clientes", Clientes);
        if (httpResponse.Error)
        {
            await mostrarMensaje.MostrarMensajeError(await httpResponse.GetBody());
        }
        else
        {
            navigationManager.NavigateTo("clientes");
        }
    }
}
