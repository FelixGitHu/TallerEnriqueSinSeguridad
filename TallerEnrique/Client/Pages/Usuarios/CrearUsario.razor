@page "/Usuarios/crear"
@inject IRepositorio repositorio
@inject NavigationManager navigationManager
@inject ILoginService loginService
@inject IMostrarMensajes mostrarMensajes
@*@attribute [Authorize(Roles = "admin")]*@

@using TallerEnrique.Client.Auth

@*<h3>Registro</h3>*@

<EditForm Model="@userInfo" OnValidSubmit="CrearUsuario">
    <DataAnnotationsValidator />
    <div class="card">
        <div class="card-header">
            Usuarios
        </div>
        <div class="card-body">
            <div class="row">
                <div class="form-group col-sm-6">
                    <label>Primer Nombre:</label>
                    <div>
                        <InputText class="form-control" @bind-Value="@userInfo.UserName" />
                        <ValidationMessage For="@(() => userInfo.UserName)" />
                    </div>
                </div>
                @*<div class="form-group col-sm-6">
                    <label>Primer Apellido:</label>
                    <div>
                        <InputText class="form-control" @bind-Value="@userInfo.UserLastName" />
                        <ValidationMessage For="@(() => userInfo.UserLastName)" />
                    </div>
                </div>*@
            </div>
            <div class="row">
                <div class="form-group col-sm-6">
                    <label>E-mail:</label>
                    <div>
                        <InputText class="form-control" @bind-Value="@userInfo.Email" />
                        <ValidationMessage For="@(() => userInfo.Email)" />
                    </div>
                </div>
                <div class="form-group col-sm-6">
                    <label>Contraseña:</label>
                    <div>
                        <InputPassword class="form-control" @bind-Value="@userInfo.Password" />
                        <ValidationMessage For="@(() => userInfo.Password)" />
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-12">
                    <button class="btn btn-success col-12" type="submit">Guardar Cambios</button>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code {
    private UserInfo userInfo = new UserInfo();

    private async Task CrearUsuario()
    {
        var httpResponse = await repositorio.Post<UserInfo, UserToken>("api/cuentas/crear", userInfo);

        if (httpResponse.Error)
        {
            await mostrarMensajes.MostrarMensajeError("No se pudo crear el usuario");
        }
        else
        {
            await mostrarMensajes.MostrarMensajeExitoso("Usuario creado exitosamente ");
            navigationManager.NavigateTo("/usuarios");
        }
    }
    //private async Task CrearUsuario()
    //{
    //    var httpResponse = await repositorio.Post("api/usuarios", userInfo);
    //    if (httpResponse.Error)
    //    {
    //        var body = await httpResponse.GetBody();
    //        await mostrarMensajes.MostrarMensajeError("Nose pudo crear el usuario");
    //    }
    //    else
    //    {
    //        navigationManager.NavigateTo("/articulos");
    //    }
    //}
}
